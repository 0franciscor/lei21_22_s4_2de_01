@startuml

autonumber

participant WarehouseMovement as wm <<application>>
participant agvManager as agvManager
participant digitalTwin as digitalTwin
participant GetAGVInfoRequest as infoRequest <<application>>
participant RepositoryFactory as factory <<factory>>

database WarehousePlantRepository as repository <<repository>>
database AislesRepository as aislerepository <<repository>>
database AGVDockRepository as agvrepository <<repository>>


 -> wm :
activate wm
wm -> factory : repositories()
activate factory
factory -> repository : create
deactivate factory
wm -> repository : findById(id)
activate repository
deactivate repository
wm -> wm : buildGrid
activate wm
wm -> wm : markObstacules()
activate wm
wm -> aislerepository : aisleList = findAll()
activate aislerepository
deactivate aislerepository
wm -> agvrepository : agvDockList = findAll()
activate agvrepository
deactivate agvrepository
deactivate wm
deactivate wm
loop for each agv retrieved
wm -> factory : findAll()
activate factory
deactivate factory

wm -> agvManager : println(request)
activate agvManager

agvManager -> digitalTwin : callAGVInfoRequest(inputLine, tokens)
activate digitalTwin

digitalTwin -> infoRequest : getAGVsInformationForDashboard(agvId)
activate infoRequest
deactivate infoRequest

deactivate digitalTwin

deactivate agvManager



end loop

 <-- wm : info about agv
 deactivate wm

@enduml