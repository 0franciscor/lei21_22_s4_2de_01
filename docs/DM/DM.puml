@startuml
'https://plantuml.com/class-diagram

skinparam classAttributeIconSize 0
hide empty attributes
skinparam classBackgroundColor beige
skinparam ArrowColor #222222

package "<<aggregate>> Client" {
    entity Client
}

entity Client <<entity>> <<root>> {

}

package "<<aggregate>> User" {
    entity User
}

entity User <<entity>> <<root>> {

}

package "<<aggregate>> ShopCar"{
    entity ShopCar
    entity Item
}

entity ShopCar <<entity>> <<root>>{

}
package "<<aggregate>> Product"{
     entity Product


}



entity Product <<entity>> <<root>> {

}

package "<<aggregate>> Order"{
    entity Order
}

entity Order <<entity>> <<root>> {


}

package "<<aggregate>> Employee" {
    entity Employee
}

entity Employee <<entity>> <<root>> {

}

package "<<aggregate>> Category" {
    entity Category
}

entity Category <<entity>> <<root>> {

}
package "<<aggregate>> Survey" {
    entity Survey
    entity Section
    entity Question
    entity Answer

}

entity Survey <<entity>> <<root>> {


}

package "<<aggregate>> Notification" {
    entity Notification
}

entity Notification <<entity>> <<root>> {


}
package "<<aggregate>> Warehouse" {
    entity Warehouse
    entity WarehousePlant
    entity Aisle
    entity Row
    entity AGVDock
    entity Shelf
    class StorageArea

}
class StorageArea <<(V,#FF8B40) value object>>{}

entity Row <<entity>>{

}

entity AGVDock <<entity>> {
}

entity Shelf <<entity>>{

}


entity WarehousePlant <<entity>> {
}


entity Aisle <<entity>>{

}


package "<<aggregate>> AGV" {
    entity AGV
    entity AGVManager
}

entity AGV <<entity>> <<root>> {

}

entity Warehouse <<entity>> <<root>> {
}

entity Item <<entity>> {

}
entity AGVManager <<entity>>{}

Client -----> "1..*" Notification : receive
Client --> "1..*" Survey : answers
Client --> "1" User : is a
Employee --> "1" User : is a
Client -----> "1" ShopCar : associated

Survey --> "1..*" Notification : emits

ShopCar ...> "1" Order : is transformed
ShopCar -> "1..*" Item : composed by

Item --> "1" Product : composed by

Order -> "0..1" Employee : associated with
Order ----> "1" Client : associated

Product --> "1" Category : organized by

Warehouse ---> "1..*" AGV : operated by
Warehouse -> "1..*" Aisle : contains
Warehouse -> "1..*" WarehousePlant : provides

Aisle --> "1..*" Row : organized by

WarehousePlant ---> "1..*" Aisle : provides information
WarehousePlant -> "1..*" AGVDock : provides information

StorageArea --> "1..*" Aisle : located in
StorageArea --> Row : identified by
StorageArea --> "1" Shelf : identified by
Product--> "1" Warehouse : located in
AGVManager --> "1" AGV : manages

Survey --> "1..*" Section : organized
Section ---> "1..*" Question: composed by
Question --> "1" Answer : has

@enduml